apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ngsa.fullname" . }}
  labels:
    app.kubernetes.io/component: app
    {{- include "ngsa.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "ngsa.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        app.kubernetes.io/component: app
        {{- include "ngsa.labels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName:  {{ include "ngsa.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: app
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}/{{ .Values.image.name }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args: {{ .Values.app.args }}
          env:
            - name: WEBSITE_ROLE_INSTANCE_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          ports:
            - name: http
              containerPort: {{ .Values.app.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: secrets
              mountPath: "/app/secrets"
        - name: log
          imagePullPolicy: Always
          image: retaildevcrew/logagent:beta
          env:
          - name: WorkspaceId
            valueFrom:
              secretKeyRef:
                name: {{ .Values.app.secretName }}
                key: WorkspaceId
          - name: SharedKey
            valueFrom:
              secretKeyRef:
                name: {{ .Values.app.secretName }}
                key: SharedKey
          - name: LogName
            valueFrom:
              configMapKeyRef:
                name: {{ .Values.log.configMapName }}
                key: LogName
          - name: Zone
            valueFrom:
              configMapKeyRef:
                name: {{ .Values.log.configMapName }}
                key: Zone
          - name: Region
            valueFrom:
              configMapKeyRef:
                name: {{ .Values.log.configMapName }}
                key: Region
          - name: NodeName
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: PodName
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: PodNamespace
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: PodIP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
      volumes:
        - name: secrets
          secret:
            secretName: {{ .Values.app.secretName }}
            defaultMode: 444
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
