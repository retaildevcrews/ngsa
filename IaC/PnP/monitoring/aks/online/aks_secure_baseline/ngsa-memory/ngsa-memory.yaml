---
apiVersion: v1
kind: Namespace
metadata:
  labels:
    name: ngsa
  name: ngsa
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ngsa-memory
  namespace: ngsa
# We should label our app with proper k8s label
  labels:
    app.kubernetes.io/name: ngsa-memory
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ngsa-memory
  template:
    metadata:
      labels:
        app: ngsa-memory
        version: beta-0329-1641
        deploy: 21-03-29-16-41-59
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '9102'
    spec:
      containers:
        - name: app
          image: ghcr.io/retaildevcrews/ngsa-app:beta
          imagePullPolicy: Always

          args: 
          - --in-memory
          - --prometheus
          # For now using dev zones 
          # - --zone
          # - az-central
          # - --region
          # - Central

          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
      # Added Node Selector
      # Since we have two node pools for PnP cluster
      nodeSelector:
        agentpool: npuser01

---
apiVersion: v1
kind: Service
metadata:
  name: ngsa-memory
  namespace: ngsa
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app: ngsa-memory
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ngsa-memory-ingress
  namespace: ngsa
  annotations:
    kubernetes.io/ingress.allow-http: "false"
    # defines controller implementing this ingress resource: https://docs.microsoft.com/en-us/azure/dev-spaces/how-to/ingress-https-traefik
    # ingress.class annotation is being deprecated in Kubernetes 1.18: https://kubernetes.io/docs/concepts/services-networking/ingress/#deprecated-annotation
    # For backwards compatibility, when this annotation is set, precedence is given over the new field ingressClassName under spec.
    kubernetes.io/ingress.class: traefik-internal
    # kubernetes.io/ingress.class: traefik
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
    traefik.ingress.kubernetes.io/router.tls.options: default
    traefik.ingress.kubernetes.io/router.middlewares: ngsa-stripprefix@file
spec:
  # ingressClassName: "traefik-internal"
  tls:
  - hosts:
      - bu0001a0008-00.ngsa-monitoring-dev.com
        # it is possible to opt for certificate management strategy with dedicated
        # certificates for each TLS SNI route.
        # In this Rereference Implementation for the sake of simplicity we use a
        # wildcard default certificate added at Ingress Controller configuration level which is *.example.com
        # secretName: <bu0001a0008-00-example-com-tls-secret>
  rules:
  - host: bu0001a0008-00.ngsa-monitoring-dev.com
    http:
      paths:
      - path: /memory
        pathType: Prefix
        backend:
          service:
            name: ngsa-memory
            port:
              number: 8080
